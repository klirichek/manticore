.. raw:: html

   <div class="navheader">

A.39. Version 0.9.8, 14 jul 2008
`Prev <rel0981.html>`__ 
Appendix A. Sphinx revision history
 `Next <rel097.html>`__

--------------

.. raw:: html

   </div>

.. raw:: html

   <div class="sect1">

.. raw:: html

   <div class="titlepage">

.. raw:: html

   <div>

.. raw:: html

   <div>

.. rubric:: A.39. Version 0.9.8, 14 jul 2008
   :name: a.39.version-0.9.8-14-jul-2008
   :class: title

.. raw:: html

   </div>

.. raw:: html

   </div>

.. raw:: html

   </div>

.. rubric:: Indexing
   :name: indexing

.. raw:: html

   <div class="itemizedlist">

-  added support for 64-bit document and keyword IDs, –enable-id64
   switch to configure

-  added support for floating point attributes

-  added support for bitfields in attributes,
   `sql\_attr\_bool <conf-sql-attr-bool.html>`__ directive and
   bit-widths part in `sql\_attr\_uint <conf-sql-attr-uint.html>`__
   directive

-  added support for multi-valued attributes (MVA)

-  added metaphone preprocessor

-  added libstemmer library support, provides stemmers for a number of
   additional languages

-  added xmlpipe2 source type, that supports arbitrary fields and
   attributes

-  added word form dictionaries, `wordforms <conf-wordforms.html>`__
   directive (and spelldump utility)

-  added tokenizing exceptions, `exceptions <conf-exceptions.html>`__
   directive

-  added an option to fully remove element contents to HTML stripper,
   `html\_remove\_elements <conf-html-remove-elements.html>`__ directive

-  added HTML entities decoder (with full XHTML1 set support) to HTML
   stripper

-  added per-index HTML stripping settings,
   `html\_strip <conf-html-strip.html>`__,
   `html\_index\_attrs <conf-html-index-attrs.html>`__, and
   `html\_remove\_elements <conf-html-remove-elements.html>`__
   directives

-  added IO load throttling, `max\_iops <conf-max-iops.html>`__ and
   `max\_iosize <conf-max-iosize.html>`__ directives

-  added SQL load throttling,
   `sql\_ranged\_throttle <conf-sql-ranged-throttle.html>`__ directive

-  added an option to index prefixes/infixes for given fields only,
   `prefix\_fields <conf-prefix-fields.html>`__ and
   `infix\_fields <conf-infix-fields.html>`__ directives

-  added an option to ignore certain characters (instead of just
   treating them as whitespace),
   `ignore\_chars <conf-ignore-chars.html>`__ directive

-  added an option to increment word position on phrase boundary
   characters, `phrase\_boundary <conf-phrase-boundary.html>`__ and
   `phrase\_boundary\_step <conf-phrase-boundary-step.html>`__
   directives

-  added –merge-dst-range switch (and filters) to index merging feature
   (–merge switch)

-  added `mysql\_connect\_flags <conf-mysql-connect-flags.html>`__
   directive (eg. to reduce indexing time MySQL network traffic and/or
   time)

-  improved ordinals sorting; now runs in fixed RAM

-  improved handling of documents with zero/NULL ids, now skipping them
   instead of aborting

.. raw:: html

   </div>

.. rubric:: Search daemon
   :name: search-daemon

.. raw:: html

   <div class="itemizedlist">

-  added an option to unlink old index on succesful rotation,
   `unlink\_old <conf-unlink-old.html>`__ directive

-  added an option to keep index files open at all times (fixes subtle
   races on rotation), `preopen <conf-preopen.html>`__ and
   `preopen\_indexes <conf-preopen-indexes.html>`__ directives

-  added an option to profile searchd disk I/O, –iostats command-line
   option

-  added an option to rotate index seamlessly (fully avoids query
   stalls), `seamless\_rotate <conf-seamless-rotate.html>`__ directive

-  added HTML stripping support to excerpts (uses per-index settings)

-  added ‘exact\_phrase’, ‘single\_passage’, ‘use\_boundaries’,
   ’weight\_order ’options to
   `BuildExcerpts() <api-func-buildexcerpts.html>`__ API call

-  added distributed attribute updates propagation

-  added distributed retries on master node side

-  added log reopen on SIGUSR1

-  added –stop switch (sends SIGTERM to running instance)

-  added Windows service mode, and –servicename switch

-  added Windows –rotate support

-  improved log timestamping, now with millisecond precision

.. raw:: html

   </div>

.. rubric:: Querying
   :name: querying

.. raw:: html

   <div class="itemizedlist">

-  added extended engine V2 (faster, cleaner, better;
   SPH\_MATCH\_EXTENDED2 mode)

-  added ranking modes support (V2 engine only;
   `SetRankingMode() <api-func-setrankingmode.html>`__ API call)

-  added quorum searching support to query language (V2 engine only;
   example: “any three of all these words”/3)

-  added query escaping support to query language, and
   `EscapeString() <api-func-escapestring.html>`__ API call

-  added multi-field syntax support to query language (example:
   “@(field1,field2) something”), and @@relaxed field checks option

-  added optional star-syntax (’word\*’) support in keywords,
   enable\_star directive (for prefix/infix indexes only)

-  added full-scan support (query must be fully empty; can perform
   block-reject optimization)

-  added COUNT(DISTINCT(attr)) calculation support,
   `SetGroupDistinct() <api-func-setgroupdistinct.html>`__ API call

-  added group-by on MVA support,
   `SetArrayResult() <api-func-setarrayresult.html>`__ PHP API call

-  added per-index weights feature,
   `SetIndexWeights() <api-func-setindexweights.html>`__ API call

-  added geodistance support,
   `SetGeoAnchor() <api-func-setgeoanchor.html>`__ API call

-  added result set sorting by arbitrary expressions in run time (eg.
   “@weight+log(price)\*2.5”), SPH\_SORT\_EXPR mode

-  added result set sorting by @custom compile-time sorting function
   (see src/sphinxcustomsort.inl)

-  added result set sorting by @random value

-  added result set merging for indexes with different schemas

-  added query comments support (3rd arg to
   `Query() <api-func-query.html>`__/`AddQuery() <api-func-addquery.html>`__
   API calls, copied verbatim to query log)

-  added keyword extraction support,
   `BuildKeywords() <api-func-buildkeywords.html>`__ API call

-  added binding field weights by name,
   `SetFieldWeights() <api-func-setfieldweights.html>`__ API call

-  added optional limit on query time,
   `SetMaxQueryTime() <api-func-setmaxquerytime.html>`__ API call

-  added optional limit on found matches count (4rd arg to
   `SetLimits() <api-func-setlimits.html>`__ API call, so-called
   ‘cutoff’)

.. raw:: html

   </div>

.. rubric:: APIs and SphinxSE
   :name: apis-and-sphinxse

.. raw:: html

   <div class="itemizedlist">

-  added pure C API (libsphinxclient)

-  added Ruby API (thanks to Dmytro Shteflyuk)

-  added Java API

-  added SphinxSE support for MVAs (use varchar), floats (use float),
   64bit docids (use bigint)

-  added SphinxSE options “floatrange”, “geoanchor”, “fieldweights”,
   “indexweights”, “maxquerytime”, “comment”, “host” and “port”; and
   support for “expr:CLAUSE”

-  improved SphinxSE max query size (using MySQL condition pushdown),
   upto 256K now

.. raw:: html

   </div>

.. rubric:: General
   :name: general

.. raw:: html

   <div class="itemizedlist">

-  added scripting (shebang syntax) support to config files (example:
   #!/usr/bin/php in the first line)

-  added unified config handling and validation to all programs

-  added unified documentation

-  added .spec file for RPM builds

-  added automated testing suite

-  improved index locking, now fcntl()-based instead of buggy
   file-existence-based

-  fixed unaligned RAM accesses, now works on SPARC and ARM

.. raw:: html

   </div>

.. rubric:: Changes and fixes since 0.9.8-rc2
   :name: changes-and-fixes-since-0.9.8-rc2

.. raw:: html

   <div class="itemizedlist">

-  added pure C API (libsphinxclient)

-  added Ruby API

-  added SetConnectTimeout() PHP API call

-  added allowed type check to UpdateAttributes() handler (bug
   `#174 <http://sphinxsearch.com/bugs/view.php?id=174>`__)

-  added defensive MVA checks on index preload (protection against
   broken indexes, bug
   `#168 <http://sphinxsearch.com/bugs/view.php?id=168>`__)

-  added sphinx-min.conf sample file

-  added –without-iconv switch to configure

-  removed redundant -lz dependency in searchd

-  removed erroneous “xmlpipe2 deprecated” warning

-  fixed EINTR handling in piped read (bug
   `#166 <http://sphinxsearch.com/bugs/view.php?id=166>`__)

-  fixup query time before logging and sending to client (bug
   `#153 <http://sphinxsearch.com/bugs/view.php?id=153>`__)

-  fixed attribute updates vs full-scan early-reject index (bug
   `#149 <http://sphinxsearch.com/bugs/view.php?id=149>`__)

-  fixed gcc warnings (bug
   `#160 <http://sphinxsearch.com/bugs/view.php?id=160>`__)

-  fixed mysql connection attempt vs pgsql source type (bug
   `#165 <http://sphinxsearch.com/bugs/view.php?id=165>`__)

-  fixed 32-bit wraparound when preloading over 2 GB files

-  fixed “out of memory” message vs over 2 GB allocs (bug
   `#116 <http://sphinxsearch.com/bugs/view.php?id=116>`__)

-  fixed unaligned RAM access detection on ARM (where unaligned reads do
   not crash but produce wrong results)

-  fixed missing full scan results in some cases

-  fixed several bugs in –merge, –merge-dst-range

-  fixed @geodist vs MultiQuery and filters, @expr vs MultiQuery

-  fixed GetTokenEnd() vs 1-grams (was causing crash in excerpts)

-  fixed sql\_query\_range to handle empty strings in addition to NULL
   strings (Postgres specific)

-  fixed morphology=none vs infixes

-  fixed case sensitive attributes names in UpdateAttributes()

-  fixed ext2 ranking vs. stopwords (now using atompos from query
   parser)

-  fixed EscapeString() call

-  fixed escaped specials (now handled as whitespace if not in charset)

-  fixed schema minimizer (now handles type/size mismatches)

-  fixed word stats in extended2; stemmed form is now returned

-  fixed spelldump case folding vs dictionary-defined character sets

-  fixed Postgres BOOLEAN handling

-  fixed enforced “inline” docinfo on empty indexes (normally ok, but
   index merge was really confused)

-  fixed rare count(distinct) out-of-bounds issue (it occasionaly caused
   too high @distinct values)

-  fixed hangups on documents with id=DOCID\_MAX in some cases

-  fixed rare crash in tokenizer (prefixed synonym vs. input stream eof)

-  fixed query parser vs “aaa (bbb ccc)\|ddd” queries

-  fixed BuildExcerpts() request in Java API

-  fixed Postgres specific memory leak

-  fixed handling of overshort keywords (less than min\_word\_len)

-  fixed HTML stripper (now emits space after indexed attributes)

-  fixed 32-field case in query parser

-  fixed rare count(distinct) vs. querying multiple local indexes vs.
   reusable sorter issue

-  fixed sorting of negative floats in SPH\_SORT\_EXTENDED mode

.. raw:: html

   </div>

.. raw:: html

   </div>

.. raw:: html

   <div class="navfooter">

--------------

+---------------------------------------+---------------------------+-------------------------------------+
| `Prev <rel0981.html>`__               | `Up <changelog.html>`__   |  `Next <rel097.html>`__             |
+---------------------------------------+---------------------------+-------------------------------------+
| A.38. Version 0.9.8.1, 30 oct 2008    | `Home <index.html>`__     |  A.40. Version 0.9.7, 02 apr 2007   |
+---------------------------------------+---------------------------+-------------------------------------+

.. raw:: html

   </div>
